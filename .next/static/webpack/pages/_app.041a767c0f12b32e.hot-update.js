"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./Context/CrowdFunding.js":
/*!*********************************!*\
  !*** ./Context/CrowdFunding.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CrowdFundingContext\": function() { return /* binding */ CrowdFundingContext; },\n/* harmony export */   \"CrowdFundingProvider\": function() { return /* binding */ CrowdFundingProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _contants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contants */ \"./Context/contants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n// const providerUrl =\n//   \"https://polygon-mumbai.g.alchemy.com/v2/4anJnw7wfV4t2gmTNMapSOCB7eaT_ZHh\";\n//---Fetching Smart Contract\nconst fetchContract = (signerOrProvider)=>new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.Contract(_contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingAddress, _contants__WEBPACK_IMPORTED_MODULE_3__.CrowdFundingABI, signerOrProvider);\nconst CrowdFundingContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst CrowdFundingProvider = (param)=>{\n    let { children  } = param;\n    _s();\n    const titleData = \"Crowdfunding Contract\";\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [usersFetchCampaigns, setUsersFetchCampaigns] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const contract = ()=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider(providerUrl);\n        const data1 = fetchContract(provider);\n        return data1;\n    };\n    const updateAccount = async ()=>{\n        const accounts = await window.ethereum.request({\n            method: \"eth_accounts\"\n        });\n        setCurrentAccount(accounts[0]);\n    };\n    const createCampaign = async (campaign)=>{\n        const { title , description , target , deadline , image  } = campaign;\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(signer);\n        // console.log(currentAccount);\n        // console.log(Math.floor(new Date(deadline).getTime() / 1000));\n        try {\n            const transaction = await contract.createCampaign(currentAccount, title, description, ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.parseUnits(target, 18), Math.floor(new Date(deadline).getTime() / 1000), image);\n            await transaction.wait();\n            console.log(\"Contract call success\", transaction);\n        } catch (error) {\n            console.log(\"Contract call failure\", error);\n        }\n    };\n    const getCampaigns = async ()=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider(providerUrl);\n        const contract = fetchContract(provider);\n        const campaigns = await contract.getCampaigns();\n        const parsedCampaigns = await campaigns.map((campaign, i)=>({\n                owner: campaign.owner,\n                title: campaign.title,\n                description: campaign.description,\n                target: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(campaign.target.toString()),\n                deadline: campaign.deadline.toNumber(),\n                amountCollected: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(campaign.amountCollected.toString()),\n                image: campaign.image,\n                pId: i\n            }));\n        return parsedCampaigns;\n    };\n    const getUserCampaigns = async ()=>{\n        const Data = await getCampaigns();\n        if (Data) {\n            const filteredCampaigns1 = Data.filter((campaign)=>campaign.owner.toLowerCase() === currentAccount.toLowerCase());\n            setUsersFetchCampaigns(filteredCampaigns1);\n            return filteredCampaigns1;\n        } else {\n            console.log(\"From else :\", filteredCampaigns);\n        }\n    };\n    const donate = async (pId, amount)=>{\n        const web3Modal = new (web3modal__WEBPACK_IMPORTED_MODULE_2___default())();\n        const connection = await web3Modal.connect();\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.Web3Provider(connection);\n        const signer = provider.getSigner();\n        const contract = fetchContract(signer);\n        try {\n            const campaignData = await contract.donateToCampaign(pId, {\n                value: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.parseEther(amount)\n            });\n            await campaignData.wait();\n            alert(\"Donation was successful!\");\n            // location.reload;\n            console.log(\"Donation was successful!\", data);\n            return campaignData;\n        } catch (error) {\n            console.log(\"Donation failed!\", error);\n        }\n    };\n    const getCampaignDonations = async (pId)=>{\n        const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.providers.JsonRpcProvider(providerUrl);\n        const contract = fetchContract(provider);\n        const donations = await contract.getDonators(pId);\n        const numberOfDonations = donations[0].length;\n        const parsedDonations = [];\n        for(let i = 0; i < numberOfDonations; i++){\n            parsedDonations.push({\n                donator: donations[0][i],\n                donation: ethers__WEBPACK_IMPORTED_MODULE_4__.ethers.utils.formatEther(donations[1][i].toString())\n            });\n        }\n        return parsedDonations;\n    };\n    //---Check if wallet is connected\n    const checkIfWalletIsConnected = async ()=>{\n        try {\n            if (!window.ethereum) return setOpenError(true), setError(\"Install MetaMask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (accounts.length) {\n                setCurrentAccount(accounts[0]);\n            } else {\n                console.log(\"No account found.\");\n            }\n        } catch (error) {\n            console.log(\"Something went wrong while connecting to wallet\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletIsConnected();\n    }, []);\n    //---Rerender campaigns when switch wallet accounts\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        window.ethereum.on(\"accountsChanged\", updateAccount);\n        // Cleanup function to remove the listener when the component unmounts\n        return ()=>window.ethereum.removeListener(\"accountsChanged\", updateAccount);\n    }, []);\n    //---Connect wallet function\n    const connectWallet = async ()=>{\n        try {\n            if (!window.ethereum) return alert(\"Install Metamask\");\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            setCurrentAccount(accounts[0]);\n        } catch (error) {\n            console.log(\"Error while connecting to wallet.\");\n        }\n    };\n    const truncate = (text, startChars, endChars, maxLength)=>{\n        if (text.length > maxLength) {\n            var start = text.substring(0, startChars);\n            var end = text.substring(text.length - endChars, text.length);\n            while(start.length + end.length < maxLength){\n                start = start + \".\";\n            }\n            return start + end;\n        }\n        return text;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(CrowdFundingContext.Provider, {\n        value: {\n            contract,\n            titleData,\n            currentAccount,\n            createCampaign,\n            getCampaigns,\n            getUserCampaigns,\n            donate,\n            getCampaignDonations,\n            connectWallet,\n            truncate\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\HP\\\\Documents\\\\_projects\\\\Sandbox\\\\solve\\\\Context\\\\CrowdFunding.js\",\n        lineNumber: 198,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CrowdFundingProvider, \"9t1UmMmmMF01R20LRjYEC8KfIu8=\");\n_c = CrowdFundingProvider;\nvar _c;\n$RefreshReg$(_c, \"CrowdFundingProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Context/CrowdFunding.js\n"));

/***/ })

});